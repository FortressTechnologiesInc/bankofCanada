name: myCICD

on:
  push:
    branches: [ main ]

jobs:
  compile:
    runs-on: nodwrkz
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'   # use LTS for stability

  gitleaks-scan:
    runs-on: nodwrkz
    needs: compile
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Gitleaks Setup
        uses: gitleaks/gitleaks-action@v2

      - name: Gitleaks Scan (client and api)
        run: |
          gitleaks detect --source ./client --exit-code 1
          gitleaks detect --source ./api --exit-code 1

  trivy_fs_scan:
    runs-on: nodwrkz
    needs: compile
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@0.28.0
        with:
          scan-type: fs
          scan-ref: .
          format: table
          ignore-unfixed: true
          vuln-type: os,library
          severity: CRITICAL,HIGH
          exit-code: 1

  sonar-check:
    runs-on: nodwrkz
    needs: compile
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: SonarQube Scan
        uses: sonarsource/sonarqube-scan-action@master
        with:
          projectBaseDir: bankapp
          args: >
            -Dsonar.projectKey=bofc
            -Dsonar.projectName=bofc
            -Dsonar.sources=bankapp
            -Dsonar.exclusions=**/node_modules/**,**/dist/**,**/build/**
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}

  build_backend_docker_image_and_push:
    runs-on: nodwrkz
    needs: [gitleaks-scan, trivy_fs_scan, sonar-check]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: temurin

      - name: Check Java version
        run: java -version

      - name: Build with Maven
        run: mvn -f bankapp/pom.xml package -DskipTests=true

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
